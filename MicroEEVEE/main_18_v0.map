Archive member included because of file (symbol)

/opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                              main_18_v0.o (xprintf)
/opt/pic32mx/lib/libm.a(w_pow.o)
                              Sensors.o (pow)
/opt/pic32mx/lib/libm.a(w_atan32.o)
                              MazeMap.o (atan2)
/opt/pic32mx/lib/libm.a(cos32.o)
                              rmi-mr32.o (cos)
/opt/pic32mx/lib/libm.a(sin32.o)
                              rmi-mr32.o (sin)
/opt/pic32mx/lib/libm.a(reduct32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (reduct)
/opt/pic32mx/lib/libm.a(sincos32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sincon)
/opt/pic32mx/lib/libm.a(func32.o)
                              /opt/pic32mx/lib/libm.a(cos32.o) (sigmax)
/opt/pic32mx/lib/libm.a(dp32.o)
                              rmi-mr32.o (__subdf3)
/opt/pic32mx/lib/libm.a(w_sqrt.o)
                              MazeMap.o (sqrt)
/opt/pic32mx/lib/libm.a(fp32.o)
                              AStar.o (__addsf3)
/opt/pic32mx/lib/libm.a(s_lib_ver.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (math_errhandling)
/opt/pic32mx/lib/libm.a(mod32.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (modf)
/opt/pic32mx/lib/libm.a(pow32.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (__mchp_pow)
/opt/pic32mx/lib/libm.a(log32.o)
                              /opt/pic32mx/lib/libm.a(pow32.o) (exlog)
/opt/pic32mx/lib/libm.a(atan32.o)
                              /opt/pic32mx/lib/libm.a(w_atan32.o) (__mchp_atan2)
/opt/pic32mx/lib/libm.a(sqrt32.o)
                              /opt/pic32mx/lib/libm.a(w_sqrt.o) (__mchp_sqrt)
/opt/pic32mx/lib/libm.a(exp32.o)
                              /opt/pic32mx/lib/libm.a(pow32.o) (exexp)
/opt/pic32mx/lib/libm.a(arc32.o)
                              /opt/pic32mx/lib/libm.a(atan32.o) (exatan)
/opt/pic32mx/lib/libc.a(errno.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (errno)
/opt/pic32mx/lib/libc.a(exit.o)
                              rmi-mr32.o (exit)
/opt/pic32mx/lib/libc.a(isinf.o)
                              /opt/pic32mx/lib/libm.a(w_pow.o) (isinf)
/opt/pic32mx/lib/libc.a(stdclean.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_cleanup)
/opt/pic32mx/lib/libc.a(_exit.o)
                              /opt/pic32mx/lib/libc.a(exit.o) (_exit)
/opt/pic32mx/lib/libc.a(_iob.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (_iob)
/opt/pic32mx/lib/libc.a(fclose.o)
                              /opt/pic32mx/lib/libc.a(stdclean.o) (fclose)
/opt/pic32mx/lib/libc.a(fflush.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (fflush)
/opt/pic32mx/lib/libc.a(buf.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_buffree)
/opt/pic32mx/lib/libc.a(tfiles.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (_tfilesptr)
/opt/pic32mx/lib/libc.a(sbrk.o)
                              /opt/pic32mx/lib/libc.a(buf.o) (sbrk)
/opt/pic32mx/lib/libc.a(write.o)
                              /opt/pic32mx/lib/libc.a(fflush.o) (write)
/opt/pic32mx/lib/libc.a(remove.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (remove)
/opt/pic32mx/lib/libc.a(close.o)
                              /opt/pic32mx/lib/libc.a(fclose.o) (close)
/opt/pic32mx/lib/libc.a(memset.o)
                              /opt/pic32mx/lib/libc.a(sbrk.o) (memset)
/opt/pic32mx/lib/libc.a(_mon_putc.o)
                              /opt/pic32mx/lib/libc.a(write.o) (_mon_putc)
/opt/pic32mx/lib/libc.a(c32_uart.o)
                              /opt/pic32mx/lib/libc.a(_mon_putc.o) (__C32_UART)

Allocating common symbols
Common symbol       size              file

t                   0x8               Sensors.o
walls_array         0x2d00            MazeMap.o
_atexitptr          0x4               /opt/pic32mx/lib/libc.a(stdclean.o)
x                   0x4               Sensors.o
errno               0x4               /opt/pic32mx/lib/libc.a(errno.o)
tick80ms            0x4               rmi-mr32.o
_sibuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)
count_beacon        0x4               main_18_v0.o
pointsList          0x320             Sensors.o
followPoints        0x4               Sensors.o
maze                0x26ac            main_18_v0.o
tick20ms            0x4               rmi-mr32.o
obstValFront        0x8               Sensors.o
beaconPoint         0x8               main_18_v0.o
obstValRight        0x8               Sensors.o
obstValLeft         0x8               Sensors.o
beaconPoints        0x50              MazeMap.o
_outdone            0x1               /opt/pic32mx/lib/libc.a(_iob.o)
visible             0x4               Sensors.o
dir_beacon          0x8               main_18_v0.o
currServoPos        0x4               Sensors.o
groundSensor        0x4               Sensors.o
tick40ms            0x4               rmi-mr32.o
y                   0x4               Sensors.o
beaconLines         0xa0              MazeMap.o
gndVals             0x14              Sensors.o
pointsListPointer   0x4               Sensors.o
tick160ms           0x4               rmi-mr32.o
_tfilesptr          0x4               /opt/pic32mx/lib/libc.a(tfiles.o)
beaconDir           0x4               Sensors.o
analogSensors       0x18              rmi-mr32.o
tick10ms            0x4               rmi-mr32.o
oldCompass          0x8               Sensors.o
_sobuf              0x20              /opt/pic32mx/lib/libc.a(_iob.o)

Microchip PIC32 Memory-Usage Report

kseg0 Program-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.text                   0x9d001400         0xb538       46392  Application's executable code 
.rodata                 0x9d00c938          0x370         880  Read-only constant data 
.data                   0x9d00cca8          0x4e4        1252  Data-initialization template 
.sdata                  0x9d00d190           0x28          40  Small data-initialization template 
      Total kseg0_program_mem used  :      0xbdb4       48564  9.4% of 0x7ec00

kseg0 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.startup                0x9d001000          0x2b0         688  C startup code 
         Total kseg0_boot_mem used  :       0x2b0         688  68.3% of 0x3f0

Exception-Memory Usage 
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.app_excpt              0x9d000180           0x14          20  General-Exception handler 
.vector_7               0x9d0002e0            0x8           8  Interrupt Vector 7 
.vector_8               0x9d000300            0x8           8  Interrupt Vector 8 
.vector_19              0x9d000460            0x8           8  Interrupt Vector 19 
          Total exception_mem used  :        0x2c          44  1.1% of 0x1000

kseg1 Boot-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
         Total kseg1_boot_mem used  :           0           0  <1% of 0x490
        --------------------------------------------------------------------------
         Total Program Memory used  :      0xc090       49296  9.4% of 0x80480
        --------------------------------------------------------------------------


kseg1 Data-Memory Usage
section                    address  length [bytes]      (dec)  Description
-------                 ----------  -------------------------  -----------
.data                   0xa0000000          0x4e4        1252  Initialized data 
.sdata                  0xa00004e8           0x28          40  Small initialized data 
.sbss                   0xa0000510          0x1b0         432  Small uninitialized data 
.bss                    0xa00006c0         0x5ac4       23236  Uninitialized data 
.stack                  0xa0006188         0x2000        8192  Minimum space reserved for stack 
         Total kseg1_data_mem used  :      0x8180       33152  25.3% of 0x20000
        --------------------------------------------------------------------------
            Total Data Memory used  :      0x8180       33152  25.3% of 0x20000
        --------------------------------------------------------------------------

Memory Configuration

Name             Origin             Length             Attributes
kseg0_program_mem 0x000000009d001400 0x000000000007ec00 xr
kseg0_boot_mem   0x000000009d001000 0x00000000000003f0
exception_mem    0x000000009d000000 0x0000000000001000
kseg1_boot_mem   0x00000000bfc00000 0x0000000000000490
debug_exec_mem   0x00000000bfc02000 0x0000000000000ff0
config3          0x00000000bfc02ff0 0x0000000000000004
config2          0x00000000bfc02ff4 0x0000000000000004
config1          0x00000000bfc02ff8 0x0000000000000004
config0          0x00000000bfc02ffc 0x0000000000000004
kseg1_data_mem   0x00000000a0000000 0x0000000000020000 w !x
sfrs             0x00000000bf800000 0x0000000000100000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD main_18_v0.o
LOAD rmi-mr32.o
LOAD MazeMap.o
LOAD AStar.o
LOAD Sensors.o
LOAD FollowTheWall.o
LOAD DodgeObstacle.o
LOAD bluetooth_comm.o
LOAD FollowTheBeacon.o
LOAD StopAtBeacon.o
LOAD Wander.o
LOAD /opt/pic32mx/lib/libdetpic32.a
LOAD /opt/pic32mx/lib/gcc/pic32mx/3.4.4/libgcc.a
LOAD /opt/pic32mx/lib/libm.a
LOAD /opt/pic32mx/lib/libc.a
LOAD /opt/pic32mx/lib/libsupc++.a
LOAD /opt/pic32mx/lib/libxcpp.a
                0x0000000000000400                PROVIDE (_min_stack_size, 0x400)
                0x0000000000000000                PROVIDE (_min_heap_size, 0x0)
LOAD /opt/pic32mx/lib/startup.o
                0x0000000000000001                PROVIDE (_vector_spacing, 0x1)
                0x000000009d000000                _ebase_address = 0x9d000000
                0x0000000000000001                _vector_spacing = 0x1
                0x000000009d001800                _reset = 0x9d001800
                0x0000000000002000                _min_stack_size = 0x2000
                0x0000000000000000                _min_heap_size = 0x0
                0x00000000bfc00000                _RESET_ADDR = 0xbfc00000
                0x00000000bfc00380                _BEV_EXCPT_ADDR = 0xbfc00380
                0x00000000bfc00480                _DBG_EXCPT_ADDR = 0xbfc00480
                0x00000000bfc02000                _DBG_CODE_ADDR = 0xbfc02000
                0x000000009d000180                _GEN_EXCPT_ADDR = (_ebase_address + 0x180)

.config_BFC02FF0
 *(.config_BFC02FF0)

.config_BFC02FF4
 *(.config_BFC02FF4)

.config_BFC02FF8
 *(.config_BFC02FF8)

.config_BFC02FFC
 *(.config_BFC02FFC)

.startup        0x000000009d001000      0x2b0
 *(.startup)
 .startup       0x000000009d001000      0x2b0 /opt/pic32mx/lib/startup.o
                0x000000009d001000                startup
 *(.startup)

.reset
 *(.reset)

.bev_excpt
 *(.bev_handler)

.dbg_excpt      0x00000000bfc00480        0x0
                0x00000000bfc00480                . = (. + DEFINED (_DEBUGGER)?0x8:0x0)

.dbg_code       0x00000000bfc02000        0x0
                0x00000000bfc02000                . = (. + DEFINED (_DEBUGGER)?0xff0:0x0)

.app_excpt      0x000000009d000180       0x14
 *(.gen_handler)
 .gen_handler   0x000000009d000180       0x14 /opt/pic32mx/lib/startup.o

.vector_0       0x000000009d000200        0x0
 *(.vector_0)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_0) <= (_vector_spacing << 0x5))), function at exception vector 0 too large)

.vector_1       0x000000009d000220        0x0
 *(.vector_1)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_1) <= (_vector_spacing << 0x5))), function at exception vector 1 too large)

.vector_2       0x000000009d000240        0x0
 *(.vector_2)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_2) <= (_vector_spacing << 0x5))), function at exception vector 2 too large)

.vector_3       0x000000009d000260        0x0
 *(.vector_3)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_3) <= (_vector_spacing << 0x5))), function at exception vector 3 too large)

.vector_4       0x000000009d000280        0x0
 *(.vector_4)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_4) <= (_vector_spacing << 0x5))), function at exception vector 4 too large)

.vector_5       0x000000009d0002a0        0x0
 *(.vector_5)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_5) <= (_vector_spacing << 0x5))), function at exception vector 5 too large)

.vector_6       0x000000009d0002c0        0x0
 *(.vector_6)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_6) <= (_vector_spacing << 0x5))), function at exception vector 6 too large)

.vector_7       0x000000009d0002e0        0x8
 *(.vector_7)
 .vector_7      0x000000009d0002e0        0x8 rmi-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_7) <= (_vector_spacing << 0x5))), function at exception vector 7 too large)

.vector_8       0x000000009d000300        0x8
 *(.vector_8)
 .vector_8      0x000000009d000300        0x8 rmi-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_8) <= (_vector_spacing << 0x5))), function at exception vector 8 too large)

.vector_9       0x000000009d000320        0x0
 *(.vector_9)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_9) <= (_vector_spacing << 0x5))), function at exception vector 9 too large)

.vector_10      0x000000009d000340        0x0
 *(.vector_10)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_10) <= (_vector_spacing << 0x5))), function at exception vector 10 too large)

.vector_11      0x000000009d000360        0x0
 *(.vector_11)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_11) <= (_vector_spacing << 0x5))), function at exception vector 11 too large)

.vector_12      0x000000009d000380        0x0
 *(.vector_12)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_12) <= (_vector_spacing << 0x5))), function at exception vector 12 too large)

.vector_13      0x000000009d0003a0        0x0
 *(.vector_13)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_13) <= (_vector_spacing << 0x5))), function at exception vector 13 too large)

.vector_14      0x000000009d0003c0        0x0
 *(.vector_14)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_14) <= (_vector_spacing << 0x5))), function at exception vector 14 too large)

.vector_15      0x000000009d0003e0        0x0
 *(.vector_15)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_15) <= (_vector_spacing << 0x5))), function at exception vector 15 too large)

.vector_16      0x000000009d000400        0x0
 *(.vector_16)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_16) <= (_vector_spacing << 0x5))), function at exception vector 16 too large)

.vector_17      0x000000009d000420        0x0
 *(.vector_17)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_17) <= (_vector_spacing << 0x5))), function at exception vector 17 too large)

.vector_18      0x000000009d000440        0x0
 *(.vector_18)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_18) <= (_vector_spacing << 0x5))), function at exception vector 18 too large)

.vector_19      0x000000009d000460        0x8
 *(.vector_19)
 .vector_19     0x000000009d000460        0x8 rmi-mr32.o
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_19) <= (_vector_spacing << 0x5))), function at exception vector 19 too large)

.vector_20      0x000000009d000480        0x0
 *(.vector_20)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_20) <= (_vector_spacing << 0x5))), function at exception vector 20 too large)

.vector_21      0x000000009d0004a0        0x0
 *(.vector_21)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_21) <= (_vector_spacing << 0x5))), function at exception vector 21 too large)

.vector_22      0x000000009d0004c0        0x0
 *(.vector_22)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_22) <= (_vector_spacing << 0x5))), function at exception vector 22 too large)

.vector_23      0x000000009d0004e0        0x0
 *(.vector_23)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_23) <= (_vector_spacing << 0x5))), function at exception vector 23 too large)

.vector_24      0x000000009d000500        0x0
 *(.vector_24)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_24) <= (_vector_spacing << 0x5))), function at exception vector 24 too large)

.vector_25      0x000000009d000520        0x0
 *(.vector_25)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_25) <= (_vector_spacing << 0x5))), function at exception vector 25 too large)

.vector_26      0x000000009d000540        0x0
 *(.vector_26)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_26) <= (_vector_spacing << 0x5))), function at exception vector 26 too large)

.vector_27      0x000000009d000560        0x0
 *(.vector_27)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_27) <= (_vector_spacing << 0x5))), function at exception vector 27 too large)

.vector_28      0x000000009d000580        0x0
 *(.vector_28)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_28) <= (_vector_spacing << 0x5))), function at exception vector 28 too large)

.vector_29      0x000000009d0005a0        0x0
 *(.vector_29)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_29) <= (_vector_spacing << 0x5))), function at exception vector 29 too large)

.vector_30      0x000000009d0005c0        0x0
 *(.vector_30)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_30) <= (_vector_spacing << 0x5))), function at exception vector 30 too large)

.vector_31      0x000000009d0005e0        0x0
 *(.vector_31)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_31) <= (_vector_spacing << 0x5))), function at exception vector 31 too large)

.vector_32      0x000000009d000600        0x0
 *(.vector_32)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_32) <= (_vector_spacing << 0x5))), function at exception vector 32 too large)

.vector_33      0x000000009d000620        0x0
 *(.vector_33)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_33) <= (_vector_spacing << 0x5))), function at exception vector 33 too large)

.vector_34      0x000000009d000640        0x0
 *(.vector_34)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_34) <= (_vector_spacing << 0x5))), function at exception vector 34 too large)

.vector_35      0x000000009d000660        0x0
 *(.vector_35)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_35) <= (_vector_spacing << 0x5))), function at exception vector 35 too large)

.vector_36      0x000000009d000680        0x0
 *(.vector_36)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_36) <= (_vector_spacing << 0x5))), function at exception vector 36 too large)

.vector_37      0x000000009d0006a0        0x0
 *(.vector_37)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_37) <= (_vector_spacing << 0x5))), function at exception vector 37 too large)

.vector_38      0x000000009d0006c0        0x0
 *(.vector_38)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_38) <= (_vector_spacing << 0x5))), function at exception vector 38 too large)

.vector_39      0x000000009d0006e0        0x0
 *(.vector_39)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_39) <= (_vector_spacing << 0x5))), function at exception vector 39 too large)

.vector_40      0x000000009d000700        0x0
 *(.vector_40)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_40) <= (_vector_spacing << 0x5))), function at exception vector 40 too large)

.vector_41      0x000000009d000720        0x0
 *(.vector_41)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_41) <= (_vector_spacing << 0x5))), function at exception vector 41 too large)

.vector_42      0x000000009d000740        0x0
 *(.vector_42)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_42) <= (_vector_spacing << 0x5))), function at exception vector 42 too large)

.vector_43      0x000000009d000760        0x0
 *(.vector_43)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_43) <= (_vector_spacing << 0x5))), function at exception vector 43 too large)

.vector_44      0x000000009d000780        0x0
 *(.vector_44)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_44) <= (_vector_spacing << 0x5))), function at exception vector 44 too large)

.vector_45      0x000000009d0007a0        0x0
 *(.vector_45)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_45) <= (_vector_spacing << 0x5))), function at exception vector 45 too large)

.vector_46      0x000000009d0007c0        0x0
 *(.vector_46)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_46) <= (_vector_spacing << 0x5))), function at exception vector 46 too large)

.vector_47      0x000000009d0007e0        0x0
 *(.vector_47)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_47) <= (_vector_spacing << 0x5))), function at exception vector 47 too large)

.vector_48      0x000000009d000800        0x0
 *(.vector_48)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_48) <= (_vector_spacing << 0x5))), function at exception vector 48 too large)

.vector_49      0x000000009d000820        0x0
 *(.vector_49)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_49) <= (_vector_spacing << 0x5))), function at exception vector 49 too large)

.vector_50      0x000000009d000840        0x0
 *(.vector_50)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_50) <= (_vector_spacing << 0x5))), function at exception vector 50 too large)

.vector_51      0x000000009d000860        0x0
 *(.vector_51)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_51) <= (_vector_spacing << 0x5))), function at exception vector 51 too large)

.vector_52      0x000000009d000880        0x0
 *(.vector_52)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_52) <= (_vector_spacing << 0x5))), function at exception vector 52 too large)

.vector_53      0x000000009d0008a0        0x0
 *(.vector_53)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_53) <= (_vector_spacing << 0x5))), function at exception vector 53 too large)

.vector_54      0x000000009d0008c0        0x0
 *(.vector_54)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_54) <= (_vector_spacing << 0x5))), function at exception vector 54 too large)

.vector_55      0x000000009d0008e0        0x0
 *(.vector_55)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_55) <= (_vector_spacing << 0x5))), function at exception vector 55 too large)

.vector_56      0x000000009d000900        0x0
 *(.vector_56)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_56) <= (_vector_spacing << 0x5))), function at exception vector 56 too large)

.vector_57      0x000000009d000920        0x0
 *(.vector_57)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_57) <= (_vector_spacing << 0x5))), function at exception vector 57 too large)

.vector_58      0x000000009d000940        0x0
 *(.vector_58)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_58) <= (_vector_spacing << 0x5))), function at exception vector 58 too large)

.vector_59      0x000000009d000960        0x0
 *(.vector_59)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_59) <= (_vector_spacing << 0x5))), function at exception vector 59 too large)

.vector_60      0x000000009d000980        0x0
 *(.vector_60)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_60) <= (_vector_spacing << 0x5))), function at exception vector 60 too large)

.vector_61      0x000000009d0009a0        0x0
 *(.vector_61)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_61) <= (_vector_spacing << 0x5))), function at exception vector 61 too large)

.vector_62      0x000000009d0009c0        0x0
 *(.vector_62)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_62) <= (_vector_spacing << 0x5))), function at exception vector 62 too large)

.vector_63      0x000000009d0009e0        0x0
 *(.vector_63)
                0x0000000000000001                ASSERT (((_vector_spacing == 0x0) || (SIZEOF (.vector_63) <= (_vector_spacing << 0x5))), function at exception vector 63 too large)

.text           0x000000009d001400     0xb538
                0x000000009d001400                _text_begin = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x000000009d001400      0x150 main_18_v0.o
                0x000000009d001400                main
 .text          0x000000009d001550     0x154c rmi-mr32.o
                0x000000009d002294                normalizeAngle
                0x000000009d0021d8                pid
                0x000000009d00168c                average
                0x000000009d002904                isr_enc_left
                0x000000009d001e50                getRobotPos_int
                0x000000009d001550                setServoPos
                0x000000009d0029bc                isr_enc_right
                0x000000009d00189c                readAnalogSensors
                0x000000009d001e14                getRobotPos
                0x000000009d0016ec                updateBatteryVoltage
                0x000000009d002a8c                __gxx_personality_v0
                0x000000009d0026bc                isr_t2
                0x000000009d001f00                led
                0x000000009d001fac                setSP2
                0x000000009d001f5c                leds
                0x000000009d001790                sort
                0x000000009d00267c                wait
                0x000000009d001ed4                setRobotPos
                0x000000009d0019cc                initPIC32
                0x000000009d0017dc                median
                0x000000009d0015f4                calcDistance
                0x000000009d002034                readEncoders
                0x000000009d002568                delay
                0x000000009d001ffc                setVel2
                0x000000009d001fa0                batteryVoltage
                0x000000009d001fe8                setPWM2
                0x000000009d00237c                updateLocalization
                0x000000009d002060                actuateMotors
                0x000000009d0025b4                readLineSensors
                0x000000009d00202c                closedLoopControl
                0x000000009d001f7c                obstacleSensor
 .text          0x000000009d002a9c     0x1e18 MazeMap.o
                0x000000009d003788                update_map
                0x000000009d002e90                get_cell_coords_from_gps_coords
                0x000000009d002a9c                confirm_wall
                0x000000009d002d24                print_map
                0x000000009d00438c                is_no_wall
                0x000000009d004514                getDirectionTarget
                0x000000009d003410                update_single_sensor
                0x000000009d002f10                dist
                0x000000009d0031b8                intersects
                0x000000009d00331c                is_confirmed_no_wall
                0x000000009d004398                setUniqueBeaconPoint
                0x000000009d003180                trust_based_on_distance
                0x000000009d003150                dist_to_line_segment
                0x000000009d00332c                weigh_wall
                0x000000009d002aa8                init_maze
                0x000000009d002d18                is_wall
                0x000000009d002ed4                dist2
                0x000000009d003174                confirm_no_wall
                0x000000009d002f34                dist_to_segment_squared
                0x000000009d00303c                get_target_dir
                0x000000009d0044a8                getBeaconAvgPoint
 .text          0x000000009d0048b4      0x608 AStar.o
                0x000000009d0048b4                dist_manhattan
                0x000000009d0048f0                astar
 .text          0x000000009d004ebc      0xcec Sensors.o
                0x000000009d004ee4                followPoints_
                0x000000009d0056b8                markPoint
                0x000000009d005980                dot_product
                0x000000009d004ebc                getLastPoint
                0x000000009d005a1c                rotateRel_naive
                0x000000009d005334                removePoint
                0x000000009d00517c                servoControl
                0x000000009d0057a4                checkPointsRadius
                0x000000009d005444                addPoint
                0x000000009d00557c                isOnRadius
 .text          0x000000009d005ba8      0xbac FollowTheWall.o
                0x000000009d006264                prep_ftw
                0x000000009d005ba8                atBeacon
                0x000000009d0063ec                ftw_isPossible
                0x000000009d005c00                ftw_getName
                0x000000009d005c0c                ftw_execute
                0x000000009d005bf0                minimum
 .text          0x000000009d006754      0x120 DodgeObstacle.o
                0x000000009d006754                do_getName
                0x000000009d006760                do_execute
                0x000000009d0067dc                do_isPossible
 .text          0x000000009d006874       0xec bluetooth_comm.o
                0x000000009d006874                configBTUart
                0x000000009d00690c                sendChar
                0x000000009d006954                txc_bt
 .text          0x000000009d006960      0x334 FollowTheBeacon.o
                0x000000009d006960                ftb_turningOnSelf
                0x000000009d006968                ftb_getName
                0x000000009d006974                ftb_execute
                0x000000009d006bd4                ftb_isPossible
 .text          0x000000009d006c94      0x140 StopAtBeacon.o
                0x000000009d006ca0                sab_execute
                0x000000009d006c94                sab_getName
                0x000000009d006d58                sab_isPossible
 .text          0x000000009d006dd4      0x130 Wander.o
                0x000000009d006efc                wan_isPossible
                0x000000009d006dd4                wan_getName
                0x000000009d006de0                wan_execute
 .text          0x000000009d006f04      0x990 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                0x000000009d006f0c                xprintf
 .text.pow      0x000000009d007894      0x1b8 /opt/pic32mx/lib/libm.a(w_pow.o)
                0x000000009d007894                pow
 .text.atan2    0x000000009d007a4c       0xe4 /opt/pic32mx/lib/libm.a(w_atan32.o)
                0x000000009d007a4c                atan2
 .text          0x000000009d007b30      0x1a0 /opt/pic32mx/lib/libm.a(cos32.o)
                0x000000009d007b30                cos
                0x000000009d007b30                dpcos
 .text          0x000000009d007cd0      0x198 /opt/pic32mx/lib/libm.a(sin32.o)
                0x000000009d007cd0                dpsin
                0x000000009d007cd0                sin
 .text          0x000000009d007e68      0x1b4 /opt/pic32mx/lib/libm.a(reduct32.o)
                0x000000009d007e68                reduct
 .text          0x000000009d00801c      0x5d4 /opt/pic32mx/lib/libm.a(func32.o)
                0x000000009d0081f0                exadd
                0x000000009d008124                exmul
                0x000000009d00801c                sigmax
                0x000000009d00838c                exdiv
                0x000000009d0082dc                exsub
 .text          0x000000009d0085f0     0x1128 /opt/pic32mx/lib/libm.a(dp32.o)
                0x000000009d0096a0                fabs
                0x000000009d009564                __eqdf2
                0x000000009d009564                __gtdf2
                0x000000009d0085f0                dpsub
                0x000000009d0091f8                __floatsidf
                0x000000009d009564                __ltdf2
                0x000000009d00926c                ultodp
                0x000000009d008a1c                dpmul
                0x000000009d009360                dptofp
                0x000000009d0094e0                __fixunsdfsi
                0x000000009d009564                dpcmp
                0x000000009d0092bc                __extendsfdf2
                0x000000009d0085f8                __adddf3
                0x000000009d0094e0                dptoul
                0x000000009d008d44                dpdiv
                0x000000009d0091f8                litodp
                0x000000009d009458                __fixdfsi
                0x000000009d009564                __ledf2
                0x000000009d0092bc                fptodp
                0x000000009d009688                __negdf2
                0x000000009d0085f8                dpadd
                0x000000009d008d44                __divdf3
                0x000000009d008a1c                __muldf3
                0x000000009d009360                __truncdfsf2
                0x000000009d009564                __nedf2
                0x000000009d009458                dptoli
                0x000000009d0096bc                nan
                0x000000009d0096a0                dpfabs
                0x000000009d009564                __gedf2
                0x000000009d0096bc                dpnan
                0x000000009d0085f0                __subdf3
 .text.sqrt     0x000000009d009718       0x80 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                0x000000009d009718                sqrt
 .text          0x000000009d009798      0x8ec /opt/pic32mx/lib/libm.a(fp32.o)
                0x000000009d009bc4                __divsf3
                0x000000009d009df0                sitofp
                0x000000009d009e98                __fixsfsi
                0x000000009d009bc4                fpdiv
                0x000000009d009798                __subsf3
                0x000000009d009e98                fptoli
                0x000000009d009f84                __lesf2
                0x000000009d00a018                fabsf
                0x000000009d009f84                __nesf2
                0x000000009d009e4c                uitofp
                0x000000009d009f84                __gtsf2
                0x000000009d009f10                fptoui
                0x000000009d00a018                fpfabs
                0x000000009d009df0                __floatsisf
                0x000000009d009e98                fptosi
                0x000000009d00a038                fpnan
                0x000000009d009f84                __eqsf2
                0x000000009d0097a0                fpadd
                0x000000009d00a028                __negsf2
                0x000000009d009f84                __ltsf2
                0x000000009d009798                fpsub
                0x000000009d009f84                fpcmp
                0x000000009d009a0c                __mulsf3
                0x000000009d009f84                __gesf2
                0x000000009d00a038                nanf
                0x000000009d009df0                litofp
                0x000000009d009a0c                fpmul
                0x000000009d009f10                __fixunssfsi
                0x000000009d0097a0                __addsf3
                0x000000009d009f10                fptoul
                0x000000009d009e4c                ultofp
 .text          0x000000009d00a084      0x5c8 /opt/pic32mx/lib/libm.a(mod32.o)
                0x000000009d00a3c8                __mchp_ldexp
                0x000000009d00a084                dpfmod
                0x000000009d00a530                modf
                0x000000009d00a084                fmod
                0x000000009d00a3c8                dpldexp
                0x000000009d00a530                dpmodf
                0x000000009d00a324                dpfrexp
                0x000000009d00a324                frexp
 .text          0x000000009d00a64c      0x520 /opt/pic32mx/lib/libm.a(pow32.o)
                0x000000009d00a64c                __mchp_pow
                0x000000009d00a64c                dppow
 .text          0x000000009d00ab6c      0x5d8 /opt/pic32mx/lib/libm.a(log32.o)
                0x000000009d00ae54                dplog
                0x000000009d00afb0                dplog10
                0x000000009d00afb0                __mchp_log10
                0x000000009d00ae54                __mchp_log
                0x000000009d00ab6c                exlog
 .text          0x000000009d00b144      0x2e0 /opt/pic32mx/lib/libm.a(atan32.o)
                0x000000009d00b144                dpatan2
                0x000000009d00b144                __mchp_atan2
 .text          0x000000009d00b424      0x5bc /opt/pic32mx/lib/libm.a(sqrt32.o)
                0x000000009d00b6bc                __mchp_sqrt
                0x000000009d00b424                exsqrt
                0x000000009d00b6bc                dpsqrt
 .text          0x000000009d00b9e0      0x340 /opt/pic32mx/lib/libm.a(exp32.o)
                0x000000009d00b9e0                exexp
                0x000000009d00bbc4                dpexp
                0x000000009d00bbc4                __mchp_exp
 .text          0x000000009d00bd20      0x384 /opt/pic32mx/lib/libm.a(arc32.o)
                0x000000009d00bfe0                dpatan
                0x000000009d00bd20                exatan
                0x000000009d00bfe0                atan
 .text.exit     0x000000009d00c0a4       0x1c /opt/pic32mx/lib/libc.a(exit.o)
                0x000000009d00c0a4                exit
 .text.isnan    0x000000009d00c0c0       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
                0x000000009d00c0c0                isnan
 .text.isinf    0x000000009d00c0f0       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
                0x000000009d00c0f0                isinf
 .text._cleanup
                0x000000009d00c120       0x60 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x000000009d00c120                _cleanup
 .text._exit    0x000000009d00c180        0x8 /opt/pic32mx/lib/libc.a(_exit.o)
                0x000000009d00c180                _exit
 .text.fclose   0x000000009d00c188      0x114 /opt/pic32mx/lib/libc.a(fclose.o)
                0x000000009d00c188                fclose
 .text.fflush   0x000000009d00c29c       0xc4 /opt/pic32mx/lib/libc.a(fflush.o)
                0x000000009d00c29c                fflush
 .text._bufallo
                0x000000009d00c360       0x58 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d00c360                _bufallo
 .text._buffree
                0x000000009d00c3b8       0x10 /opt/pic32mx/lib/libc.a(buf.o)
                0x000000009d00c3b8                _buffree
 .text.getpagesize
                0x000000009d00c3c8        0x8 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c3c8                getpagesize
 .text._stub_sbd_memlayout
                0x000000009d00c3d0       0x2c /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c3d0                _stub_sbd_memlayout
                0x000000009d00c3d0                _sbd_memlayout
 .text._sbrk_init
                0x000000009d00c3fc      0x158 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c3fc                _sbrk_init
 .text._sbrk    0x000000009d00c554       0xbc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c554                _sbrk
 .text.sbrk     0x000000009d00c610       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
                0x000000009d00c610                sbrk
 .text.write    0x000000009d00c684       0xa8 /opt/pic32mx/lib/libc.a(write.o)
                0x000000009d00c684                write
 .text.remove   0x000000009d00c72c        0x8 /opt/pic32mx/lib/libc.a(remove.o)
                0x000000009d00c72c                remove
 .text.close    0x000000009d00c734        0x8 /opt/pic32mx/lib/libc.a(close.o)
                0x000000009d00c734                close
 .text          0x000000009d00c73c       0xa8 /opt/pic32mx/lib/libc.a(memset.o)
                0x000000009d00c73c                memset
 .text._mon_putc
                0x000000009d00c7e4       0xa4 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                0x000000009d00c7e4                _mon_putc
 .text          0x000000009d00c888       0xb0 /opt/pic32mx/lib/startup.o
                0x000000009d00c8f8                printStr
                0x000000009d00c8d8                printInt
                0x000000009d00c8b8                readInt
                0x000000009d00c930                resetCoreTimer
                0x000000009d00c8a8                putChar
                0x000000009d00c908                readStr
                0x000000009d00c918                exxt
                0x000000009d00c8e8                printInt10
                0x000000009d00c888                inkey
                0x000000009d00c898                getChar
                0x000000009d00c8c8                readInt10
                0x000000009d00c928                readCoreTimer
 *(.text.*personality*)
 *(.gnu.warning)
 *(.mips16.fn.*)
 *(.mips16.call.*)
                0x000000009d00c938                _text_end = .

.rodata         0x000000009d00c938      0x370
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x000000009d00c938       0x19 main_18_v0.o
                                         0x1c (size before relaxing)
 *fill*         0x000000009d00c951        0x3 00
 .rodata        0x000000009d00c954       0x10 rmi-mr32.o
                0x000000009d00c958                KI_num
                0x000000009d00c960                KP_num
                0x000000009d00c954                KI_den
                0x000000009d00c95c                KP_den
 *fill*         0x000000009d00c964        0x4 00
 .rodata.cst8   0x000000009d00c968       0x38 rmi-mr32.o
 .rodata.str1.4
                0x000000009d00c9a0       0x12 MazeMap.o
                                         0x18 (size before relaxing)
 *fill*         0x000000009d00c9b2        0x2 00
 .rodata.cst4   0x000000009d00c9b4        0x8 MazeMap.o
 .rodata        0x000000009d00c9bc        0xc MazeMap.o
 .rodata.cst8   0x000000009d00c9c8       0x20 MazeMap.o
 .rodata.cst4   0x000000009d00c9e8        0x8 AStar.o
 .rodata.str1.4
                0x000000009d00c9f0       0xcb Sensors.o
                                         0xcc (size before relaxing)
 *fill*         0x000000009d00cabb        0x5 00
 .rodata.cst8   0x000000009d00cac0       0x30 Sensors.o
                                         0x48 (size before relaxing)
 .rodata.str1.4
                0x000000009d00caf0       0x2a FollowTheWall.o
                                         0x2c (size before relaxing)
 *fill*         0x000000009d00cb1a        0x6 00
 .rodata.cst8   0x000000009d00cb20       0x60 FollowTheWall.o
                                         0x88 (size before relaxing)
 .rodata.str1.4
                0x000000009d00cb80        0xe DodgeObstacle.o
                                         0x10 (size before relaxing)
 .rodata.cst8   0x000000009d00cb8e        0x0 DodgeObstacle.o
                                         0x18 (size before relaxing)
 *fill*         0x000000009d00cb8e        0x2 00
 .rodata.str1.4
                0x000000009d00cb90       0x10 FollowTheBeacon.o
 .rodata.cst8   0x000000009d00cba0        0x0 FollowTheBeacon.o
                                         0x20 (size before relaxing)
 .rodata.str1.4
                0x000000009d00cba0       0x2d StopAtBeacon.o
                                         0x30 (size before relaxing)
 *fill*         0x000000009d00cbcd        0x3 00
 .rodata.str1.4
                0x000000009d00cbd0        0x7 Wander.o
                                          0x8 (size before relaxing)
 .rodata.cst8   0x000000009d00cbd7        0x0 Wander.o
                                         0x20 (size before relaxing)
 *fill*         0x000000009d00cbd7        0x1 00
 .rodata.str1.4
                0x000000009d00cbd8       0x11 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x14 (size before relaxing)
 *fill*         0x000000009d00cbe9        0x7 00
 .rodata.cst8   0x000000009d00cbf0       0x10 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
                                         0x20 (size before relaxing)
 .rodata        0x000000009d00cc00       0x84 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 *fill*         0x000000009d00cc84        0x4 00
 .rodata.cst8   0x000000009d00cc88        0x8 /opt/pic32mx/lib/libm.a(w_pow.o)
 .rodata        0x000000009d00cc90       0x15 /opt/pic32mx/lib/startup.o
 *(.rodata1)
                0x000000009d00cca8                . = ALIGN (0x4)
 *fill*         0x000000009d00cca5        0x3 00

.sdata2         0x000000009d00cca8        0x0
 *(.sdata2 .sdata2.* .gnu.linkonce.s2.*)
                0x000000009d00cca8                . = ALIGN (0x4)

.sbss2          0x000000009d00cca8        0x0
 *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*)
                0x000000009d00cca8                . = ALIGN (0x4)

.eh_frame_hdr
 *(.eh_frame_hdr)

.eh_frame
 *(.eh_frame)

.dbg_data       0x00000000a0000000        0x0
                0x00000000a0000000                . = (. + DEFINED (_DEBUGGER)?0x200:0x0)

.data           0x00000000a0000000      0x4e4 load address 0x000000009d00cca8
                0x00000000a0000000                _data_begin = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x00000000a0000000       0x88 rmi-mr32.o
 .data          0x00000000a0000088       0x18 bluetooth_comm.o
                0x00000000a0000088                uart_offsets
 .data          0x00000000a00000a0       0x70 /opt/pic32mx/lib/libm.a(sincos32.o)
                0x00000000a00000a0                sincon
                0x00000000a00000d8                coscon
 .data.math_errhandling_flag
                0x00000000a0000110        0x4 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
                0x00000000a0000110                math_errhandling
 .data          0x00000000a0000114       0xe8 /opt/pic32mx/lib/libm.a(log32.o)
 .data          0x00000000a00001fc       0xa0 /opt/pic32mx/lib/libm.a(exp32.o)
 .data          0x00000000a000029c      0x1a8 /opt/pic32mx/lib/libm.a(arc32.o)
 .data          0x00000000a0000444       0xa0 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000444                _iob
 *(.gnu.linkonce.d.*personality*)
 *(.data1)
                0x000000009d00cca8                _data_image_begin = LOADADDR (.data)

.eh_frame
 *(.eh_frame)
                0x00000000a00084e0                _gp = (ALIGN (0x10) + 0x7ff0)

.got
 *(.got.plt)
 *(.got)

.sdata          0x00000000a00004e8       0x28 load address 0x000000009d00d190
                0x00000000a00004e8                _sdata_begin = .
 *(.sdata .sdata.* .gnu.linkonce.s.*)
 .sdata         0x00000000a00004e8        0x8 rmi-mr32.o
                0x00000000a00004e8                SERVO_WIDTH_MAX
                0x00000000a00004ec                SERVO_WIDTH_MIN
 .sdata         0x00000000a00004f0       0x10 Sensors.o
                0x00000000a00004f0                modder
                0x00000000a00004f8                radiusConst
 .sdata         0x00000000a0000500        0x4 FollowTheWall.o
                0x00000000a0000500                sharpTurnCounter
 .sdata         0x00000000a0000504        0x4 bluetooth_comm.o
 .sdata         0x00000000a0000508        0x4 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0000508                _Files
 .sdata         0x00000000a000050c        0x4 /opt/pic32mx/lib/libc.a(c32_uart.o)
                0x00000000a000050c                __C32_UART
                0x00000000a0000510                _sdata_end = .

.lit8
 *(.lit8)

.lit4
 *(.lit4)
                0x00000000a0000510                . = ALIGN (0x4)
                0x00000000a0000510                _data_end = .
                0x00000000a0000510                _bss_begin = .

.sbss           0x00000000a0000510      0x1b0
                0x00000000a0000510                _sbss_begin = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 .sbss          0x00000000a0000510       0x90 rmi-mr32.o
 .sbss          0x00000000a00005a0       0x10 MazeMap.o
                0x00000000a00005a0                beaconPoints_index
                0x00000000a00005a4                beaconPoints_size
                0x00000000a00005a8                index_beacon
                0x00000000a00005ac                beaconLines_size
 .sbss          0x00000000a00005b0       0x28 Sensors.o
                0x00000000a00005d4                lastPointX
                0x00000000a00005b8                oldBVis
                0x00000000a00005c0                right
                0x00000000a00005c8                targetY
                0x00000000a00005c4                left
                0x00000000a00005cc                targetX
                0x00000000a00005b4                oldBVis2
                0x00000000a00005d0                lastPointY
                0x00000000a00005b0                rotate_right
                0x00000000a00005bc                bVis
 .sbss          0x00000000a00005d8       0x40 FollowTheWall.o
                0x00000000a0000608                keepValues
                0x00000000a00005d8                mainSide
                0x00000000a00005e0                prevSpeed
                0x00000000a0000614                wallOnTheRight
                0x00000000a00005e8                prevComp
                0x00000000a000060c                facedBeacon
                0x00000000a00005f0                grausRodados
                0x00000000a0000600                lastKnownBeaconAngle
                0x00000000a0000610                wallOnTheLeft
                0x00000000a00005f8                lastKnownBeaconCompass
 .sbss          0x00000000a0000618        0x4 bluetooth_comm.o
                0x00000000a0000618                bt_enable
 .sbss          0x00000000a000061c        0x4 FollowTheBeacon.o
                0x00000000a000061c                turnedOnMyself
 .sbss          0x00000000a0000620        0x4 StopAtBeacon.o
                0x00000000a0000620                firstTime
 .sbss          0x00000000a0000624        0x4 /opt/pic32mx/lib/libc.a(buf.o)
 .sbss          0x00000000a0000628        0xc /opt/pic32mx/lib/libc.a(sbrk.o)
                0x00000000a000062c                _minbrk
                0x00000000a0000628                _maxbrk
 *(.scommon)
 *fill*         0x00000000a0000634        0x4 00
 .scommon       0x00000000a0000638       0x18 main_18_v0.o
                0x00000000a0000638                count_beacon
                0x00000000a000063c                beaconPoint
                0x00000000a0000648                dir_beacon
 .scommon       0x00000000a0000650       0x14 rmi-mr32.o
                0x00000000a0000650                tick80ms
                0x00000000a0000654                tick20ms
                0x00000000a0000658                tick40ms
                0x00000000a000065c                tick160ms
                0x00000000a0000660                tick10ms
 *fill*         0x00000000a0000664        0x4 00
 .scommon       0x00000000a0000668       0x48 Sensors.o
                0x00000000a0000668                t
                0x00000000a0000670                x
                0x00000000a0000674                followPoints
                0x00000000a0000678                obstValFront
                0x00000000a0000680                obstValRight
                0x00000000a0000688                obstValLeft
                0x00000000a0000690                visible
                0x00000000a0000694                currServoPos
                0x00000000a0000698                groundSensor
                0x00000000a000069c                y
                0x00000000a00006a0                pointsListPointer
                0x00000000a00006a4                beaconDir
                0x00000000a00006a8                oldCompass
 .scommon       0x00000000a00006b0        0x4 /opt/pic32mx/lib/libc.a(errno.o)
                0x00000000a00006b0                errno
 .scommon       0x00000000a00006b4        0x4 /opt/pic32mx/lib/libc.a(stdclean.o)
                0x00000000a00006b4                _atexitptr
 .scommon       0x00000000a00006b8        0x1 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a00006b8                _outdone
 *fill*         0x00000000a00006b9        0x3 00
 .scommon       0x00000000a00006bc        0x4 /opt/pic32mx/lib/libc.a(tfiles.o)
                0x00000000a00006bc                _tfilesptr
                0x00000000a00006c0                _sbss_end = .

.bss            0x00000000a00006c0     0x5ac4
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x00000000a00006c0      0x284 rmi-mr32.o
 .bss           0x00000000a0000944       0x18 /opt/pic32mx/lib/libc.a(sbrk.o)
 *(COMMON)
 COMMON         0x00000000a000095c     0x26ac main_18_v0.o
                0x00000000a000095c                maze
 COMMON         0x00000000a0003008       0x18 rmi-mr32.o
                0x00000000a0003008                analogSensors
 COMMON         0x00000000a0003020     0x2df0 MazeMap.o
                0x00000000a0003020                walls_array
                0x00000000a0005d20                beaconPoints
                0x00000000a0005d70                beaconLines
 COMMON         0x00000000a0005e10      0x334 Sensors.o
                0x00000000a0005e10                pointsList
                0x00000000a0006130                gndVals
 COMMON         0x00000000a0006144       0x40 /opt/pic32mx/lib/libc.a(_iob.o)
                0x00000000a0006144                _sibuf
                0x00000000a0006164                _sobuf
                0x00000000a0006184                . = ALIGN (0x4)
                0x00000000a0006184                . = ALIGN (0x4)
                0x00000000a0006184                _end = .
                0x00000000a0006184                _bss_end = .

.persist        0x00000000a0006184        0x0
 *(.persist)
                0x00000000a0006184                . = ALIGN (0x4)

.heap           0x00000000a0006184        0x0
                0x00000000a0006184                _heap = .
                0x00000000a0006184                . = (. + _min_heap_size)

.stack          0x00000000a0006188     0x2000
                0x00000000a0006188                _splim = .
                0x00000000a0006188                _SPLIM = .
                0x00000000a0008188                . = (. + _min_stack_size)
 *fill*         0x00000000a0006188     0x2000 00

.ramfunc        0x00000000a0008800        0x0 load address 0x000000009d00d1b8
                0x00000000a0008800                _ramfunc_begin = .
 *(.ramfunc .ramfunc.*)
                0x00000000a0008800                . = ALIGN (0x4)
                0x00000000a0008800                _ramfunc_end = .
                0x000000009d00d1b8                _ramfunc_image_begin = LOADADDR (.ramfunc)
                0x0000000000000000                _ramfunc_length = SIZEOF (.ramfunc)
                0x0000000000008800                _bmxdkpba_address = (_ramfunc_begin - 0xa0000000)
                0x0000000000020000                _bmxdudba_address = 0x20000
                0x0000000000020000                _bmxdupba_address = 0x20000
                0x00000000a0020000                _stack = (_ramfunc_length > 0x0)?(_ramfunc_begin - 0x4):0xa0020000
                0x0000000000000001                ASSERT (((_min_stack_size + _min_heap_size) <= (_stack - _heap)), Not enough space to allocate both stack and heap.  Reduce heap and/or stack size.)

.pdr            0x0000000000000000      0xe40
 *(.pdr)
 .pdr           0x0000000000000000       0x20 main_18_v0.o
 .pdr           0x0000000000000020      0x440 rmi-mr32.o
 .pdr           0x0000000000000460      0x2a0 MazeMap.o
 .pdr           0x0000000000000700       0x40 AStar.o
 .pdr           0x0000000000000740      0x140 Sensors.o
 .pdr           0x0000000000000880       0xc0 FollowTheWall.o
 .pdr           0x0000000000000940       0x60 DodgeObstacle.o
 .pdr           0x00000000000009a0       0x60 bluetooth_comm.o
 .pdr           0x0000000000000a00       0x80 FollowTheBeacon.o
 .pdr           0x0000000000000a80       0x60 StopAtBeacon.o
 .pdr           0x0000000000000ae0       0x60 Wander.o
 .pdr           0x0000000000000b40       0x40 /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .pdr           0x0000000000000b80       0x20 /opt/pic32mx/lib/libm.a(w_pow.o)
 .pdr           0x0000000000000ba0       0x20 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .pdr           0x0000000000000bc0       0x20 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .pdr           0x0000000000000be0       0x20 /opt/pic32mx/lib/libc.a(exit.o)
 .pdr           0x0000000000000c00       0x40 /opt/pic32mx/lib/libc.a(isinf.o)
 .pdr           0x0000000000000c40       0x20 /opt/pic32mx/lib/libc.a(stdclean.o)
 .pdr           0x0000000000000c60       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .pdr           0x0000000000000c80       0x20 /opt/pic32mx/lib/libc.a(fclose.o)
 .pdr           0x0000000000000ca0       0x20 /opt/pic32mx/lib/libc.a(fflush.o)
 .pdr           0x0000000000000cc0       0x40 /opt/pic32mx/lib/libc.a(buf.o)
 .pdr           0x0000000000000d00       0xa0 /opt/pic32mx/lib/libc.a(sbrk.o)
 .pdr           0x0000000000000da0       0x20 /opt/pic32mx/lib/libc.a(write.o)
 .pdr           0x0000000000000dc0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .pdr           0x0000000000000de0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .pdr           0x0000000000000e00       0x20 /opt/pic32mx/lib/libc.a(memset.o)
 .pdr           0x0000000000000e20       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.reginfo        0x0000000000000000       0x18
 *(.reginfo)
 .reginfo       0x0000000000000000       0x18 main_18_v0.o

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000      0xa41
 *(.comment)
 .comment       0x0000000000000000       0x4d main_18_v0.o
 .comment       0x000000000000004d       0x4d rmi-mr32.o
 .comment       0x000000000000009a       0x4d MazeMap.o
 .comment       0x00000000000000e7       0x4d AStar.o
 .comment       0x0000000000000134       0x4d Sensors.o
 .comment       0x0000000000000181       0x4d FollowTheWall.o
 .comment       0x00000000000001ce       0x4d DodgeObstacle.o
 .comment       0x000000000000021b       0x4d bluetooth_comm.o
 .comment       0x0000000000000268       0x4d FollowTheBeacon.o
 .comment       0x00000000000002b5       0x4d StopAtBeacon.o
 .comment       0x0000000000000302       0x4d Wander.o
 .comment       0x000000000000034f       0x4d /opt/pic32mx/lib/libdetpic32.a(xprintf.o)
 .comment       0x000000000000039c       0x4d /opt/pic32mx/lib/libm.a(w_pow.o)
 .comment       0x00000000000003e9       0x4d /opt/pic32mx/lib/libm.a(w_atan32.o)
 .comment       0x0000000000000436       0x4d /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .comment       0x0000000000000483       0x4d /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .comment       0x00000000000004d0       0x4d /opt/pic32mx/lib/libc.a(errno.o)
 .comment       0x000000000000051d       0x4d /opt/pic32mx/lib/libc.a(exit.o)
 .comment       0x000000000000056a       0x4d /opt/pic32mx/lib/libc.a(isinf.o)
 .comment       0x00000000000005b7       0x4d /opt/pic32mx/lib/libc.a(stdclean.o)
 .comment       0x0000000000000604       0x4d /opt/pic32mx/lib/libc.a(_exit.o)
 .comment       0x0000000000000651       0x4d /opt/pic32mx/lib/libc.a(_iob.o)
 .comment       0x000000000000069e       0x4d /opt/pic32mx/lib/libc.a(fclose.o)
 .comment       0x00000000000006eb       0x4d /opt/pic32mx/lib/libc.a(fflush.o)
 .comment       0x0000000000000738       0x4d /opt/pic32mx/lib/libc.a(buf.o)
 .comment       0x0000000000000785       0x4d /opt/pic32mx/lib/libc.a(tfiles.o)
 .comment       0x00000000000007d2       0x98 /opt/pic32mx/lib/libc.a(sbrk.o)
 .comment       0x000000000000086a       0x4d /opt/pic32mx/lib/libc.a(write.o)
 .comment       0x00000000000008b7       0x4d /opt/pic32mx/lib/libc.a(remove.o)
 .comment       0x0000000000000904       0x4d /opt/pic32mx/lib/libc.a(close.o)
 .comment       0x0000000000000951       0x56 /opt/pic32mx/lib/libc.a(memset.o)
 .comment       0x00000000000009a7       0x4d /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .comment       0x00000000000009f4       0x4d /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000      0x288
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x28 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_aranges
                0x0000000000000028       0x28 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_aranges
                0x0000000000000050       0x28 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_aranges
                0x0000000000000078       0x28 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_aranges
                0x00000000000000a0       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_aranges
                0x00000000000000d0       0x28 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_aranges
                0x00000000000000f8       0x28 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_aranges
                0x0000000000000120       0x28 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_aranges
                0x0000000000000148       0x28 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_aranges
                0x0000000000000170       0x30 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_aranges
                0x00000000000001a0       0x48 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_aranges
                0x00000000000001e8       0x28 /opt/pic32mx/lib/libc.a(write.o)
 .debug_aranges
                0x0000000000000210       0x28 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_aranges
                0x0000000000000238       0x28 /opt/pic32mx/lib/libc.a(close.o)
 .debug_aranges
                0x0000000000000260       0x28 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_pubnames
                0x0000000000000000      0x2d2
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1a /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_pubnames
                0x000000000000001a       0x1c /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_pubnames
                0x0000000000000036       0x1b /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_pubnames
                0x0000000000000051       0x1c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_pubnames
                0x000000000000006d       0x1b /opt/pic32mx/lib/libc.a(exit.o)
 .debug_pubnames
                0x0000000000000088       0x26 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_pubnames
                0x00000000000000ae       0x2e /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_pubnames
                0x00000000000000dc       0x1c /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_pubnames
                0x00000000000000f8       0x49 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_pubnames
                0x0000000000000141       0x1d /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_pubnames
                0x000000000000015e       0x1d /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_pubnames
                0x000000000000017b       0x2c /opt/pic32mx/lib/libc.a(buf.o)
 .debug_pubnames
                0x00000000000001a7       0x21 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_pubnames
                0x00000000000001c8       0x74 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_pubnames
                0x000000000000023c       0x1c /opt/pic32mx/lib/libc.a(write.o)
 .debug_pubnames
                0x0000000000000258       0x1d /opt/pic32mx/lib/libc.a(remove.o)
 .debug_pubnames
                0x0000000000000275       0x1c /opt/pic32mx/lib/libc.a(close.o)
 .debug_pubnames
                0x0000000000000291       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_pubnames
                0x00000000000002b1       0x21 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_info     0x0000000000000000      0xf98
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000       0x30 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_info    0x0000000000000030       0x30 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_info    0x0000000000000060       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_info    0x0000000000000090       0x3f /opt/pic32mx/lib/libc.a(errno.o)
 .debug_info    0x00000000000000cf       0x6a /opt/pic32mx/lib/libc.a(exit.o)
 .debug_info    0x0000000000000139      0x148 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_info    0x0000000000000281      0x13f /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_info    0x00000000000003c0       0x4a /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_info    0x000000000000040a      0x150 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_info    0x000000000000055a      0x162 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_info    0x00000000000006bc       0xf1 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_info    0x00000000000007ad      0x145 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_info    0x00000000000008f2      0x127 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_info    0x0000000000000a19      0x282 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_info    0x0000000000000c9b       0x7c /opt/pic32mx/lib/libc.a(write.o)
 .debug_info    0x0000000000000d17       0xa9 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_info    0x0000000000000dc0       0x9e /opt/pic32mx/lib/libc.a(close.o)
 .debug_info    0x0000000000000e5e       0xfb /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_info    0x0000000000000f59       0x3f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_abbrev   0x0000000000000000      0x992
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0x23 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_abbrev  0x0000000000000023       0x23 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_abbrev  0x0000000000000046       0x23 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_abbrev  0x0000000000000069        0x1 /opt/pic32mx/lib/libm.a(s_lib_ver.o)
 .debug_abbrev  0x000000000000006a       0x30 /opt/pic32mx/lib/libc.a(errno.o)
 .debug_abbrev  0x000000000000009a       0x60 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_abbrev  0x00000000000000fa       0xc7 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_abbrev  0x00000000000001c1       0xbd /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_abbrev  0x000000000000027e       0x41 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_abbrev  0x00000000000002bf       0x81 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_abbrev  0x0000000000000340       0xcc /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_abbrev  0x000000000000040c       0x80 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_abbrev  0x000000000000048c      0x109 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_abbrev  0x0000000000000595       0x90 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_abbrev  0x0000000000000625      0x153 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_abbrev  0x0000000000000778       0x73 /opt/pic32mx/lib/libc.a(write.o)
 .debug_abbrev  0x00000000000007eb       0x7f /opt/pic32mx/lib/libc.a(remove.o)
 .debug_abbrev  0x000000000000086a       0x6f /opt/pic32mx/lib/libc.a(close.o)
 .debug_abbrev  0x00000000000008d9       0x89 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_abbrev  0x0000000000000962       0x30 /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_line     0x0000000000000000     0x1c3f
 *(.debug_line)
 .debug_line    0x0000000000000000       0x96 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_line    0x0000000000000096       0x92 /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_line    0x0000000000000128       0x90 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_line    0x00000000000001b8      0x17c /opt/pic32mx/lib/libc.a(errno.o)
 .debug_line    0x0000000000000334      0x19d /opt/pic32mx/lib/libc.a(exit.o)
 .debug_line    0x00000000000004d1      0x287 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_line    0x0000000000000758      0x1b9 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_line    0x0000000000000911       0x9e /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_line    0x00000000000009af      0x196 /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_line    0x0000000000000b45      0x1ec /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_line    0x0000000000000d31      0x1e4 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_line    0x0000000000000f15      0x258 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_line    0x000000000000116d      0x198 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_line    0x0000000000001305      0x3c3 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_line    0x00000000000016c8       0xc2 /opt/pic32mx/lib/libc.a(write.o)
 .debug_line    0x000000000000178a      0x1aa /opt/pic32mx/lib/libc.a(remove.o)
 .debug_line    0x0000000000001934      0x1a9 /opt/pic32mx/lib/libc.a(close.o)
 .debug_line    0x0000000000001add       0xd3 /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_line    0x0000000000001bb0       0x8f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_frame    0x0000000000000000      0x310
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x44 /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_frame   0x0000000000000044       0x3c /opt/pic32mx/lib/libm.a(w_atan32.o)
 .debug_frame   0x0000000000000080       0x30 /opt/pic32mx/lib/libm.a(w_sqrt.o)
 .debug_frame   0x00000000000000b0       0x2c /opt/pic32mx/lib/libc.a(exit.o)
 .debug_frame   0x00000000000000dc       0x30 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_frame   0x000000000000010c       0x30 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_frame   0x000000000000013c       0x20 /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_frame   0x000000000000015c       0x30 /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_frame   0x000000000000018c       0x2c /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_frame   0x00000000000001b8       0x38 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_frame   0x00000000000001f0       0x8c /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_frame   0x000000000000027c       0x34 /opt/pic32mx/lib/libc.a(write.o)
 .debug_frame   0x00000000000002b0       0x20 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_frame   0x00000000000002d0       0x20 /opt/pic32mx/lib/libc.a(close.o)
 .debug_frame   0x00000000000002f0       0x20 /opt/pic32mx/lib/libc.a(_mon_putc.o)

.debug_str      0x0000000000000000      0xbac
 *(.debug_str)
 .debug_str     0x0000000000000000       0xbd /opt/pic32mx/lib/libm.a(w_pow.o)
 .debug_str     0x00000000000000bd       0x78 /opt/pic32mx/lib/libm.a(w_atan32.o)
                                         0xbf (size before relaxing)
 .debug_str     0x0000000000000135       0x75 /opt/pic32mx/lib/libm.a(w_sqrt.o)
                                         0xbc (size before relaxing)
 .debug_str     0x00000000000001aa       0x72 /opt/pic32mx/lib/libc.a(errno.o)
                                         0xb9 (size before relaxing)
 .debug_str     0x000000000000021c       0x74 /opt/pic32mx/lib/libc.a(exit.o)
                                         0xef (size before relaxing)
 .debug_str     0x0000000000000290       0xe0 /opt/pic32mx/lib/libc.a(isinf.o)
                                        0x160 (size before relaxing)
 .debug_str     0x0000000000000370       0xa9 /opt/pic32mx/lib/libc.a(stdclean.o)
                                        0x157 (size before relaxing)
 .debug_str     0x0000000000000419       0x74 /opt/pic32mx/lib/libc.a(_exit.o)
                                         0xc2 (size before relaxing)
 .debug_str     0x000000000000048d       0x89 /opt/pic32mx/lib/libc.a(_iob.o)
                                        0x14f (size before relaxing)
 .debug_str     0x0000000000000516       0x8d /opt/pic32mx/lib/libc.a(fclose.o)
                                        0x14e (size before relaxing)
 .debug_str     0x00000000000005a3       0x74 /opt/pic32mx/lib/libc.a(fflush.o)
                                        0x135 (size before relaxing)
 .debug_str     0x0000000000000617       0xb6 /opt/pic32mx/lib/libc.a(buf.o)
                                        0x152 (size before relaxing)
 .debug_str     0x00000000000006cd       0x6d /opt/pic32mx/lib/libc.a(tfiles.o)
                                        0x147 (size before relaxing)
 .debug_str     0x000000000000073a      0x101 /opt/pic32mx/lib/libc.a(sbrk.o)
                                        0x19d (size before relaxing)
 .debug_str     0x000000000000083b       0x82 /opt/pic32mx/lib/libc.a(write.o)
                                         0xd6 (size before relaxing)
 .debug_str     0x00000000000008bd       0xdd /opt/pic32mx/lib/libc.a(remove.o)
                                        0x16e (size before relaxing)
 .debug_str     0x000000000000099a       0xc2 /opt/pic32mx/lib/libc.a(close.o)
                                        0x160 (size before relaxing)
 .debug_str     0x0000000000000a5c       0xe1 /opt/pic32mx/lib/libc.a(_mon_putc.o)
                                        0x13a (size before relaxing)
 .debug_str     0x0000000000000b3d       0x6f /opt/pic32mx/lib/libc.a(c32_uart.o)
                                         0xc1 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo  0x0000000000000000    0x15fa9
 *(.debug_macinfo)
 .debug_macinfo
                0x0000000000000000      0xdbb /opt/pic32mx/lib/libc.a(errno.o)
 .debug_macinfo
                0x0000000000000dbb      0xbb6 /opt/pic32mx/lib/libc.a(exit.o)
 .debug_macinfo
                0x0000000000001971     0x1774 /opt/pic32mx/lib/libc.a(isinf.o)
 .debug_macinfo
                0x00000000000030e5     0x1e47 /opt/pic32mx/lib/libc.a(stdclean.o)
 .debug_macinfo
                0x0000000000004f2c      0x92f /opt/pic32mx/lib/libc.a(_exit.o)
 .debug_macinfo
                0x000000000000585b     0x1e4e /opt/pic32mx/lib/libc.a(_iob.o)
 .debug_macinfo
                0x00000000000076a9     0x1e6a /opt/pic32mx/lib/libc.a(fclose.o)
 .debug_macinfo
                0x0000000000009513     0x1e59 /opt/pic32mx/lib/libc.a(fflush.o)
 .debug_macinfo
                0x000000000000b36c     0x23b5 /opt/pic32mx/lib/libc.a(buf.o)
 .debug_macinfo
                0x000000000000d721     0x1e47 /opt/pic32mx/lib/libc.a(tfiles.o)
 .debug_macinfo
                0x000000000000f568     0x1199 /opt/pic32mx/lib/libc.a(sbrk.o)
 .debug_macinfo
                0x0000000000010701      0x92f /opt/pic32mx/lib/libc.a(write.o)
 .debug_macinfo
                0x0000000000011030     0x1e47 /opt/pic32mx/lib/libc.a(remove.o)
 .debug_macinfo
                0x0000000000012e77     0x1e47 /opt/pic32mx/lib/libc.a(close.o)
 .debug_macinfo
                0x0000000000014cbe      0x9bc /opt/pic32mx/lib/libc.a(_mon_putc.o)
 .debug_macinfo
                0x000000000001567a      0x92f /opt/pic32mx/lib/libc.a(c32_uart.o)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

/DISCARD/
 *(.note.GNU-stack)
OUTPUT(main_18_v0.elf elf32-tradlittlemips)

.mdebug.abi32   0x000000009d00d1b8        0x0

.rel.dyn        0x000000009d00d1b8        0x0

.debug_ranges   0x000000009d00d1b8       0x18
 .debug_ranges  0x000000009d00d1b8       0x18 /opt/pic32mx/lib/libc.a(fclose.o)
